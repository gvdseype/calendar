{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalAddTodo.tsx\";\nimport React from \"react\";\nimport { Form, Modal } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalAddTodo = props => {\n  const handleOk = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n  const showModal = () => {\n    props.setIsModalAddTodoOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n      onClick: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      mask: false,\n      title: \"Add a new todo\",\n      open: props.isModalAddTodoOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        style: {\n          maxWidth: 600\n        },\n        initialValues: {\n          remember: true\n        },\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = ModalAddTodo;\nexport default ModalAddTodo;\nvar _c;\n$RefreshReg$(_c, \"ModalAddTodo\");","map":{"version":3,"names":["React","Form","Modal","PlusCircleOutlined","ModalAddTodo","props","handleOk","setIsModalAddTodoOpen","handleCancel","showModal","isModalAddTodoOpen","span","maxWidth","remember"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalAddTodo.tsx"],"sourcesContent":["import React from \"react\";\nimport {  Form, Modal } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Todo } from \"../types\";\n\ninterface ModalAddTodoInterface {\n  isModalAddTodoOpen: boolean;\n  setIsModalAddTodoOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[];\n}\n\n\nconst ModalAddTodo = (props: ModalAddTodoInterface) => {\n\n  const handleOk = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n\n  const showModal = () => {\n    props.setIsModalAddTodoOpen(true);\n  }\n\n  return (\n    <>\n      <PlusCircleOutlined onClick={showModal}/>\n      <Modal mask={false} title=\"Add a new todo\" open={props.isModalAddTodoOpen} onOk={handleOk} onCancel={handleCancel}>\n        <Form\n          name=\"basic\"\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          style={{ maxWidth: 600 }}\n          initialValues={{ remember: true }}\n          autoComplete=\"off\"\n        >\n\n\n        </Form>\n      </Modal>\n    </>\n  )\n}\n\nexport default ModalAddTodo"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAUC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AACnC,SAASC,kBAAkB,QAAQ,mBAAmB;AAAC;AAAA;AAWvD,MAAMC,YAAY,GAAIC,KAA4B,IAAK;EAErD,MAAMC,QAAQ,GAAG,MAAM;IACrBD,KAAK,CAACE,qBAAqB,CAAC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBH,KAAK,CAACE,qBAAqB,CAAC,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,SAAS,GAAG,MAAM;IACtBJ,KAAK,CAACE,qBAAqB,CAAC,IAAI,CAAC;EACnC,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,kBAAkB;MAAC,OAAO,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACzC,QAAC,KAAK;MAAC,IAAI,EAAE,KAAM;MAAC,KAAK,EAAC,gBAAgB;MAAC,IAAI,EAAEJ,KAAK,CAACK,kBAAmB;MAAC,IAAI,EAAEJ,QAAS;MAAC,QAAQ,EAAEE,YAAa;MAAA,uBAChH,QAAC,IAAI;QACH,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAE;UAAEG,IAAI,EAAE;QAAE,CAAE;QACtB,UAAU,EAAE;UAAEA,IAAI,EAAE;QAAG,CAAE;QACzB,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QACzB,aAAa,EAAE;UAAEC,QAAQ,EAAE;QAAK,CAAE;QAClC,YAAY,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA;IAIb;MAAA;MAAA;MAAA;IAAA,QACD;EAAA,gBACP;AAEP,CAAC;AAAA,KAhCKT,YAAY;AAkClB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}