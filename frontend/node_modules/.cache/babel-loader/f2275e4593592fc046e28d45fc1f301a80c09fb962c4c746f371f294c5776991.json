{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/CalendarDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Calendar, Popover, Space, Button } from \"antd\";\nimport ModalHolder from \"./ModalHolder\";\nimport ModalAddTodo from \"./ModalAddTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusToType = {\n  \"true\": \"success\",\n  \"false\": \"error\"\n};\nconst CalendarDisplay = props => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isModalAddTodoOpen, setIsModalAddTodoOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState();\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const getData = value => {\n    const month = value.month();\n    const array = props.todos.filter(aTodo => {\n      if (aTodo.month - 1 == month) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return array;\n  };\n  const dateCellRender = value => {\n    const data = getData(value);\n    if (data.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"events\",\n          children: data.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              wrap: true,\n              children: /*#__PURE__*/_jsxDEV(Popover, {\n                placement: \"topLeft\",\n                title: todo.title,\n                content: todo.description,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: showModal,\n                  children: todo.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ModalHolder, {\n                  isModalOpen: isModalOpen,\n                  setIsModalOpen: setIsModalOpen,\n                  todo: todo,\n                  setTodos: props.setTodos,\n                  todos: props.todos\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalAddTodo, {\n          isModalAddTodoOpen: isModalAddTodoOpen,\n          setIsModalAddTodoOpen: setIsModalAddTodoOpen,\n          setTodos: props.setTodos,\n          todos: props.todos,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ModalAddTodo, {\n        isModalAddTodoOpen: isModalAddTodoOpen,\n        setIsModalAddTodoOpen: setIsModalAddTodoOpen,\n        setTodos: props.setTodos,\n        todos: props.todos,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  console.log(selectedDay);\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    dateCellRender: dateCellRender,\n    onChange: date => setSelectedDay(date)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarDisplay, \"umR2hHlm56pvaAFm8zz46VNaKcQ=\");\n_c = CalendarDisplay;\nexport default CalendarDisplay;\nvar _c;\n$RefreshReg$(_c, \"CalendarDisplay\");","map":{"version":3,"names":["React","useState","Calendar","Popover","Space","Button","ModalHolder","ModalAddTodo","statusToType","CalendarDisplay","props","isModalOpen","setIsModalOpen","isModalAddTodoOpen","setIsModalAddTodoOpen","selectedDay","setSelectedDay","showModal","getData","value","month","array","todos","filter","aTodo","dateCellRender","data","length","map","todo","title","description","setTodos","id","console","log","date"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/CalendarDisplay.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Calendar, Popover, Space, Button } from \"antd\";\nimport type {Dayjs} from \"dayjs\";\nimport { Todo } from \"../types\";\nimport ModalHolder from \"./ModalHolder\";\nimport ModalAddTodo from \"./ModalAddTodo\";\nimport dayjs from \"dayjs\";\n\ninterface CalendarDisplayInterface {\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nconst statusToType : Record<string, string> = {\n  \"true\": \"success\",\n  \"false\": \"error\",\n}\n\nconst CalendarDisplay = (props: CalendarDisplayInterface) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [isModalAddTodoOpen, setIsModalAddTodoOpen] = useState<boolean>(false);\n  const [selectedDay, setSelectedDay] = useState<Dayjs>();\n\n  \n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const getData = (value: Dayjs) => {\n    const month = value.month()\n    \n    const array = props.todos.filter((aTodo: Todo) => {\n      if (aTodo.month -1 == month) {\n        return true\n      } else {\n        return false\n      }\n    })    \n    return array\n  }\n\n  const dateCellRender = (value: Dayjs) => {\n    const data: Todo[] = getData(value);\n    \n    if (data.length > 0) {\n      return (\n        <div>\n          <ul className=\"events\">\n            {data.map((todo) => (\n              <li key={todo.id} >\n                <Space wrap>\n                  <Popover placement=\"topLeft\" title={todo.title} content={todo.description}>\n                    <Button onClick={showModal}>{todo.title}</Button>\n                    <ModalHolder isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} todo={todo} setTodos={props.setTodos} todos={props.todos}/>\n                  </Popover>\n                </Space>\n              </li>\n            ))}\n          </ul>\n          <ModalAddTodo isModalAddTodoOpen={isModalAddTodoOpen} setIsModalAddTodoOpen={setIsModalAddTodoOpen} setTodos={props.setTodos} todos={props.todos} value={value}/>\n        </div>\n        \n      );\n    } else {\n      return (\n        <ModalAddTodo isModalAddTodoOpen={isModalAddTodoOpen} setIsModalAddTodoOpen={setIsModalAddTodoOpen} setTodos={props.setTodos} todos={props.todos} value={value}/>\n      )\n    }\n    \n  };\n  console.log(selectedDay);\n  \n  return (\n    <Calendar dateCellRender={dateCellRender} onChange={(date: Dayjs) => setSelectedDay(date)}/>\n  )\n}\n\nexport default CalendarDisplay"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}