{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalHolder.tsx\";\nimport { Modal } from \"antd\";\nimport React from \"react\";\nimport { FormModal } from \"./FormModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalHolder = props => {\n  const handleOk = () => {\n    props.setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Change the title, the description or the status\",\n      open: props.isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(FormModal, {\n        todo: props.todo,\n        setTodos: props.setTodos,\n        todos: props.todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalHolder;\nexport default ModalHolder;\nvar _c;\n$RefreshReg$(_c, \"ModalHolder\");","map":{"version":3,"names":["Modal","React","FormModal","ModalHolder","props","handleOk","setIsModalOpen","handleCancel","isModalOpen","todo","setTodos","todos"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalHolder.tsx"],"sourcesContent":["import { Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Todo } from \"../types\";\nimport { FormModal } from \"./FormModal\";\n\ninterface ModalHolderProps {\n  isModalOpen: boolean;\n  setIsModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  todo: Todo;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[]\n}\n\nconst ModalHolder = (props: ModalHolderProps) => {\n\n  const handleOk = () => {\n    props.setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalOpen(false);\n  };\n\n  return (\n    <div>\n      <Modal title=\"Change the title, the description or the status\" open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n        <FormModal todo={props.todo} setTodos={props.setTodos} todos={props.todos}/>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ModalHolder"],"mappings":";AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,MAAoB,OAAO;AAEvC,SAASC,SAAS,QAAQ,aAAa;AAAC;AAUxC,MAAMC,WAAW,GAAIC,KAAuB,IAAK;EAE/C,MAAMC,QAAQ,GAAG,MAAM;IACrBD,KAAK,CAACE,cAAc,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBH,KAAK,CAACE,cAAc,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,KAAK,EAAC,iDAAiD;MAAC,IAAI,EAAEF,KAAK,CAACI,WAAY;MAAC,IAAI,EAAEH,QAAS;MAAC,QAAQ,EAAEE,YAAa;MAAA,uBAC7H,QAAC,SAAS;QAAC,IAAI,EAAEH,KAAK,CAACK,IAAK;QAAC,QAAQ,EAAEL,KAAK,CAACM,QAAS;QAAC,KAAK,EAAEN,KAAK,CAACO;MAAM;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA;EACtE;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAA,KAjBKR,WAAW;AAmBjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}