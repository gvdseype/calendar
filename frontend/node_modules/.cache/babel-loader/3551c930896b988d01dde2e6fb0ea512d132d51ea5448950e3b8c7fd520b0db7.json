{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/Form.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = props => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(false);\n  const onChangeTitle = event => {\n    event.preventDefault();\n    setTitle(event.target.value);\n  };\n  const onChangeDescription = event => {\n    event.preventDefault();\n    setDescription(event.target.value);\n  };\n  const changeStatus = event => {\n    event.preventDefault();\n    setStatus(!status);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(title, description, status);\n  };\n  if (props.visibility) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          placeholder: props.todo.title,\n          onChange: onChangeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"description\",\n          value: description,\n          placeholder: props.todo.description,\n          onChange: onChangeDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Change todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: changeStatus,\n          children: [status ? \"mark as undone\" : \"mark as done\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n_s(Form, \"+EHY4XgR3QLP09d9Bd3QkcFxaPQ=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Form","props","title","setTitle","description","setDescription","status","setStatus","onChangeTitle","event","preventDefault","target","value","onChangeDescription","changeStatus","handleSubmit","console","log","visibility","todo"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/Form.tsx"],"sourcesContent":["import React, { InputHTMLAttributes, useState } from \"react\";\nimport { State } from \"../types\";\nimport { Todo } from \"../types\";\n\n\n\ninterface TodoProps {\n  todo: Todo;\n  visibility: boolean\n  // month: number\n}\n\nexport const Form = (props: TodoProps) => {\n  const [title, setTitle] = useState<string>(\"\")\n  const [description, setDescription] = useState<string>(\"\")\n  const [status, setStatus] = useState<boolean>(false)\n\n  const onChangeTitle: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    setTitle(event.target.value)\n  }\n\n  const onChangeDescription: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    setDescription(event.target.value)\n  }\n\n  const changeStatus: React.MouseEventHandler<HTMLDivElement> = (event) => {\n    event.preventDefault();\n    setStatus(!status)\n  }\n\n  const handleSubmit: React.FormEventHandler<HTMLFormElement>= (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    console.log(title, description, status);\n    \n  }\n\n  if (props.visibility) {\n    return (\n      <div>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"title\">Title</label>\n          <br />\n          <input type=\"text\" id=\"title\" value={title} placeholder={props.todo.title} onChange={onChangeTitle}/>\n          <br/>\n          <br/>\n  \n          <label htmlFor=\"description\">Description</label>\n          <br />\n          <input type=\"text\" id=\"description\" value={description} placeholder={props.todo.description} onChange={onChangeDescription}/>\n          <br/>\n          <br/>\n          <button type=\"submit\">Change todo</button>\n          <div onClick={changeStatus}>{status ? \"mark as undone\" : \"mark as done\"} </div>\n\n        </form>\n      </div>\n    )\n  } else {\n    return (\n      null\n    )\n  }\n  \n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAyBC,QAAQ,QAAQ,OAAO;AAAC;AAY7D,OAAO,MAAMC,IAAI,GAAIC,KAAgB,IAAK;EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAU,KAAK,CAAC;EAEpD,MAAMS,aAAyD,GAAIC,KAAK,IAAK;IAC3EA,KAAK,CAACC,cAAc,EAAE;IACtBP,QAAQ,CAACM,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,mBAA+D,GAAIJ,KAAK,IAAK;IACjFA,KAAK,CAACC,cAAc,EAAE;IACtBL,cAAc,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,YAAqD,GAAIL,KAAK,IAAK;IACvEA,KAAK,CAACC,cAAc,EAAE;IACtBH,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMS,YAAqD,GAAGN,KAAuC,IAAK;IACxGA,KAAK,CAACC,cAAc,EAAE;IACtBM,OAAO,CAACC,GAAG,CAACf,KAAK,EAAEE,WAAW,EAAEE,MAAM,CAAC;EAEzC,CAAC;EAED,IAAIL,KAAK,CAACiB,UAAU,EAAE;IACpB,oBACE;MAAA,uBACE;QAAM,QAAQ,EAAEH,YAAa;QAAA,wBAC3B;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpC;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,OAAO;UAAC,KAAK,EAAEb,KAAM;UAAC,WAAW,EAAED,KAAK,CAACkB,IAAI,CAACjB,KAAM;UAAC,QAAQ,EAAEM;QAAc;UAAA;UAAA;UAAA;QAAA,QAAE,eACrG;UAAA;UAAA;UAAA;QAAA,QAAK,eACL;UAAA;UAAA;UAAA;QAAA,QAAK,eAEL;UAAO,OAAO,EAAC,aAAa;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAQ,eAChD;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,aAAa;UAAC,KAAK,EAAEJ,WAAY;UAAC,WAAW,EAAEH,KAAK,CAACkB,IAAI,CAACf,WAAY;UAAC,QAAQ,EAAES;QAAoB;UAAA;UAAA;UAAA;QAAA,QAAE,eAC7H;UAAA;UAAA;UAAA;QAAA,QAAK,eACL;UAAA;UAAA;UAAA;QAAA,QAAK,eACL;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAS,eAC1C;UAAK,OAAO,EAAEC,YAAa;UAAA,WAAER,MAAM,GAAG,gBAAgB,GAAG,cAAc,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IAE1E;MAAA;MAAA;MAAA;IAAA,QACH;EAEV,CAAC,MAAM;IACL,OACE,IAAI;EAER;AAEF,CAAC;AAAA,GArDYN,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}