{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalHolder.tsx\",\n  _s = $RefreshSig$();\nimport { Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalHolder = props => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      open: props.isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some contents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some contents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some contents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ModalHolder, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = ModalHolder;\nexport default ModalHolder;\nvar _c;\n$RefreshReg$(_c, \"ModalHolder\");","map":{"version":3,"names":["Modal","React","useState","ModalHolder","props","isModalOpen","setIsModalOpen","showModal","handleOk","handleCancel"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalHolder.tsx"],"sourcesContent":["import { Modal } from \"antd\";\nimport React, { useState } from \"react\";\n\ninterface ModalHolderProps {\n  isModalOpen: boolean;\n  setIsModalOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst ModalHolder = (props: ModalHolderProps) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Modal title=\"Basic Modal\" open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Modal>\n    </>\n  )\n}\n\nexport default ModalHolder"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAOxC,MAAMC,WAAW,GAAIC,KAAuB,IAAK;EAAA;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMK,SAAS,GAAG,MAAM;IACtBD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,QAAQ,GAAG,MAAM;IACrBF,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMG,YAAY,GAAG,MAAM;IACzBH,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,KAAK,EAAC,aAAa;MAAC,IAAI,EAAEF,KAAK,CAACC,WAAY;MAAC,IAAI,EAAEG,QAAS;MAAC,QAAQ,EAAEC,YAAa;MAAA,wBACzF;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI,eACvB;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI,eACvB;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EACjB,iBACP;AAEP,CAAC;AAAA,GAxBKN,WAAW;AAAA,KAAXA,WAAW;AA0BjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}