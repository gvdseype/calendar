{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/CalendarDisplay.tsx\";\nimport React from \"react\";\nimport { Calendar, Badge } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusToType = {\n  \"true\": \"success\",\n  \"false\": \"error\"\n};\nconst getListData = value => {\n  let listData;\n  switch (value.date()) {\n    case 8:\n      listData = [{\n        type: \"warning\",\n        content: \"This is warning event.\"\n      }, {\n        type: \"success\",\n        content: \"This is usual event.\"\n      }];\n      break;\n    case 10:\n      listData = [{\n        type: \"warning\",\n        content: \"This is warning event.\"\n      }, {\n        type: \"success\",\n        content: \"This is usual event.\"\n      }, {\n        type: \"error\",\n        content: \"This is error event.\"\n      }];\n      break;\n    case 15:\n      listData = [{\n        type: \"warning\",\n        content: \"This is warning event\"\n      }, {\n        type: \"success\",\n        content: \"This is very long usual event。。....\"\n      }, {\n        type: \"error\",\n        content: \"This is error event 1.\"\n      }, {\n        type: \"error\",\n        content: \"This is error event 2.\"\n      }, {\n        type: \"error\",\n        content: \"This is error event 3.\"\n      }, {\n        type: \"error\",\n        content: \"This is error event 4.\"\n      }];\n      break;\n    default:\n  }\n  return listData || [];\n};\nconst CalendarDisplay = props => {\n  const dateCellRender = value => {\n    const listData = getListData(value);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"events\",\n      children: listData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          status: item.type,\n          text: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, item.content, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    dateCellRender: dateCellRender\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c = CalendarDisplay;\nexport default CalendarDisplay;\nvar _c;\n$RefreshReg$(_c, \"CalendarDisplay\");","map":{"version":3,"names":["React","Calendar","Badge","statusToType","getListData","value","listData","date","type","content","CalendarDisplay","props","dateCellRender","map","item"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/CalendarDisplay.tsx"],"sourcesContent":["import React from \"react\";\nimport { Calendar, BadgeProps, Badge } from \"antd\";\nimport type {Dayjs} from \"dayjs\";\nimport { Todo } from \"../types\";\n\ninterface CalendarDisplayInterface {\n  todos: Todo[]\n}\n\nconst statusToType : Record<string, string> = {\n  \"true\": \"success\",\n  \"false\": \"error\",\n}\n\nconst getListData = (value: Dayjs) => {\n  let listData;\n  switch (value.date()) {\n    case 8:\n      listData = [\n        { type: \"warning\", content: \"This is warning event.\" },\n        { type: \"success\", content: \"This is usual event.\" }\n      ];\n      break;\n    case 10:\n      listData = [\n        { type: \"warning\", content: \"This is warning event.\" },\n        { type: \"success\", content: \"This is usual event.\" },\n        { type: \"error\", content: \"This is error event.\" }\n      ];\n      break;\n    case 15:\n      listData = [\n        { type: \"warning\", content: \"This is warning event\" },\n        { type: \"success\", content: \"This is very long usual event。。....\" },\n        { type: \"error\", content: \"This is error event 1.\" },\n        { type: \"error\", content: \"This is error event 2.\" },\n        { type: \"error\", content: \"This is error event 3.\" },\n        { type: \"error\", content: \"This is error event 4.\" }\n      ];\n      break;\n    default:\n  }\n  return listData || [];\n};\n\nconst CalendarDisplay = (props: CalendarDisplayInterface) : Todo[] => {\n\n\n\n  const dateCellRender = (value: Dayjs) => {\n    const listData = getListData(value);\n    return (\n      <ul className=\"events\">\n        {listData.map((item) => (\n          <li key={item.content}>\n            <Badge\n              status={item.type as BadgeProps[\"status\"]}\n              text={item.content}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <Calendar\n      dateCellRender={dateCellRender}\n    />\n  );\n}\n\nexport default CalendarDisplay"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAcC,KAAK,QAAQ,MAAM;AAAC;AAQnD,MAAMC,YAAqC,GAAG;EAC5C,MAAM,EAAE,SAAS;EACjB,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAIC,KAAY,IAAK;EACpC,IAAIC,QAAQ;EACZ,QAAQD,KAAK,CAACE,IAAI,EAAE;IAClB,KAAK,CAAC;MACJD,QAAQ,GAAG,CACT;QAAEE,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAyB,CAAC,EACtD;QAAED,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAuB,CAAC,CACrD;MACD;IACF,KAAK,EAAE;MACLH,QAAQ,GAAG,CACT;QAAEE,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAyB,CAAC,EACtD;QAAED,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAuB,CAAC,EACpD;QAAED,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAuB,CAAC,CACnD;MACD;IACF,KAAK,EAAE;MACLH,QAAQ,GAAG,CACT;QAAEE,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAwB,CAAC,EACrD;QAAED,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAsC,CAAC,EACnE;QAAED,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAyB,CAAC,EACpD;QAAED,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAyB,CAAC,EACpD;QAAED,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAyB,CAAC,EACpD;QAAED,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAyB,CAAC,CACrD;MACD;IACF;EAAQ;EAEV,OAAOH,QAAQ,IAAI,EAAE;AACvB,CAAC;AAED,MAAMI,eAAe,GAAIC,KAA+B,IAAc;EAIpE,MAAMC,cAAc,GAAIP,KAAY,IAAK;IACvC,MAAMC,QAAQ,GAAGF,WAAW,CAACC,KAAK,CAAC;IACnC,oBACE;MAAI,SAAS,EAAC,QAAQ;MAAA,UACnBC,QAAQ,CAACO,GAAG,CAAEC,IAAI,iBACjB;QAAA,uBACE,QAAC,KAAK;UACJ,MAAM,EAAEA,IAAI,CAACN,IAA6B;UAC1C,IAAI,EAAEM,IAAI,CAACL;QAAQ;UAAA;UAAA;UAAA;QAAA;MACnB,GAJKK,IAAI,CAACL,OAAO;QAAA;QAAA;QAAA;MAAA,QAMtB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAET,CAAC;EAED,oBACE,QAAC,QAAQ;IACP,cAAc,EAAEG;EAAe;IAAA;IAAA;IAAA;EAAA,QAC/B;AAEN,CAAC;AAAA,KAzBKF,eAAe;AA2BrB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}