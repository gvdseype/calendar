{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalHolder.tsx\";\nimport { Modal } from \"antd\";\nimport React from \"react\";\nimport { FormModal } from \"./FormModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalHolder = props => {\n  const handleOk = () => {\n    props.setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalOpen(false);\n  };\n  if (props.todos.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Change the title, the description or the status\",\n        open: props.isModalOpen,\n        onOk: handleOk,\n        onCancel: handleCancel,\n        children: /*#__PURE__*/_jsxDEV(FormModal, {\n          todo: props.todo,\n          setTodos: props.setTodos,\n          todos: props.todos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = ModalHolder;\nexport default ModalHolder;\nvar _c;\n$RefreshReg$(_c, \"ModalHolder\");","map":{"version":3,"names":["Modal","React","FormModal","ModalHolder","props","handleOk","setIsModalOpen","handleCancel","todos","length","isModalOpen","todo","setTodos"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalHolder.tsx"],"sourcesContent":["import { Modal } from \"antd\";\nimport React from \"react\";\nimport { Todo } from \"../types\";\nimport { FormModal } from \"./FormModal\";\n\n\ninterface ModalHolderProps {\n  isModalOpen: boolean;\n  setIsModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  todo: Todo;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[]\n}\n\nconst ModalHolder = (props: ModalHolderProps) => {\n\n  const handleOk = () => {\n    props.setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalOpen(false);\n  };\n\n  if (props.todos.length > 0) {\n    return (\n      <div>\n        <Modal title=\"Change the title, the description or the status\" open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n          <FormModal todo={props.todo} setTodos={props.setTodos} todos={props.todos}/>\n        </Modal>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n\n      </div>\n    )\n  }\n  \n}\n\nexport default ModalHolder"],"mappings":";AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,aAAa;AAAC;AAWxC,MAAMC,WAAW,GAAIC,KAAuB,IAAK;EAE/C,MAAMC,QAAQ,GAAG,MAAM;IACrBD,KAAK,CAACE,cAAc,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBH,KAAK,CAACE,cAAc,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,IAAIF,KAAK,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IAC1B,oBACE;MAAA,uBACE,QAAC,KAAK;QAAC,KAAK,EAAC,iDAAiD;QAAC,IAAI,EAAEL,KAAK,CAACM,WAAY;QAAC,IAAI,EAAEL,QAAS;QAAC,QAAQ,EAAEE,YAAa;QAAA,uBAC7H,QAAC,SAAS;UAAC,IAAI,EAAEH,KAAK,CAACO,IAAK;UAAC,QAAQ,EAAEP,KAAK,CAACQ,QAAS;UAAC,KAAK,EAAER,KAAK,CAACI;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IACtE;MAAA;MAAA;MAAA;IAAA,QACJ;EAEV,CAAC,MAAM;IACL,oBACE;MAAA;MAAA;MAAA;IAAA,QAEM;EAEV;AAEF,CAAC;AAAA,KA1BKL,WAAW;AA4BjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}