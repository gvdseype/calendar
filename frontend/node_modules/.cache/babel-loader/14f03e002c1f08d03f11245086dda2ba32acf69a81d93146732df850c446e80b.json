{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalAddTodo.tsx\";\nimport React from \"react\";\nimport { Modal } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalAddTodo = props => {\n  const handleOk = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n  const showModal = () => {\n    props.setIsModalAddTodoOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n      onClick: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      mask: false,\n      maskStyle: {\n        backgroundColor: \"transparent\"\n      },\n      title: \"Add a new todo\",\n      open: props.isModalAddTodoOpen,\n      onOk: handleOk,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalAddTodo;\nexport default ModalAddTodo;\nvar _c;\n$RefreshReg$(_c, \"ModalAddTodo\");","map":{"version":3,"names":["React","Modal","PlusCircleOutlined","ModalAddTodo","props","handleOk","setIsModalAddTodoOpen","handleCancel","showModal","backgroundColor","isModalAddTodoOpen"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalAddTodo.tsx"],"sourcesContent":["import React from \"react\";\nimport {  Modal } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Todo } from \"../types\";\n\ninterface ModalAddTodoInterface {\n  isModalAddTodoOpen: boolean;\n  setIsModalAddTodoOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[];\n}\n\n\nconst ModalAddTodo = (props: ModalAddTodoInterface) => {\n\n  const handleOk = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n\n  const showModal = () => {\n    props.setIsModalAddTodoOpen(true);\n  }\n\n  return (\n    <div>\n      <PlusCircleOutlined onClick={showModal}/>\n      <Modal mask={false}  maskStyle={{ backgroundColor: \"transparent\" }} title=\"Add a new todo\" open={props.isModalAddTodoOpen} onOk={handleOk} onCancel={handleCancel}>\n\n      </Modal>\n    </div>\n  )\n}\n\nexport default ModalAddTodo"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAUC,KAAK,QAAQ,MAAM;AAC7B,SAASC,kBAAkB,QAAQ,mBAAmB;AAAC;AAWvD,MAAMC,YAAY,GAAIC,KAA4B,IAAK;EAErD,MAAMC,QAAQ,GAAG,MAAM;IACrBD,KAAK,CAACE,qBAAqB,CAAC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBH,KAAK,CAACE,qBAAqB,CAAC,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,SAAS,GAAG,MAAM;IACtBJ,KAAK,CAACE,qBAAqB,CAAC,IAAI,CAAC;EACnC,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,kBAAkB;MAAC,OAAO,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACzC,QAAC,KAAK;MAAC,IAAI,EAAE,KAAM;MAAE,SAAS,EAAE;QAAEC,eAAe,EAAE;MAAc,CAAE;MAAC,KAAK,EAAC,gBAAgB;MAAC,IAAI,EAAEL,KAAK,CAACM,kBAAmB;MAAC,IAAI,EAAEL,QAAS;MAAC,QAAQ,EAAEE;IAAa;MAAA;MAAA;MAAA;IAAA,QAE1J;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAA,KAtBKJ,YAAY;AAwBlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}