{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalAddTodo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Checkbox, Form, Input, Modal } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalAddTodo = props => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(false);\n  const onChangeTitle = event => {\n    event.preventDefault();\n    setTitle(event.target.value);\n  };\n  const onChangeDescription = event => {\n    event.preventDefault();\n    setDescription(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(title, description, status);\n    console.log(props.value.date());\n    axios.post('http://localhost:3001/api/todos', {\n      month: props.value.month() + 1,\n      day: props.value.date(),\n      title: title,\n      description: description,\n      status: status\n    }).then(res => {\n      console.log('from handle submit', res.data);\n      props.setTodos(props.todos.concat(res.data));\n    });\n  };\n  const onStatusChange = event => {\n    setStatus(event.target.checked);\n  };\n  const handleOk = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n  const showModal = () => {\n    props.setIsModalAddTodoOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n      onClick: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"modal\",\n      mask: false,\n      title: \"Add a new todo\",\n      open: props.isModalAddTodoOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        style: {\n          maxWidth: 600\n        },\n        initialValues: {\n          remember: true\n        },\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Title\",\n          name: \"title\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"description\",\n          name: \"description\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: onStatusChange,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ModalAddTodo, \"+EHY4XgR3QLP09d9Bd3QkcFxaPQ=\");\n_c = ModalAddTodo;\nexport default ModalAddTodo;\nvar _c;\n$RefreshReg$(_c, \"ModalAddTodo\");","map":{"version":3,"names":["React","useState","Button","Checkbox","Form","Input","Modal","PlusCircleOutlined","axios","ModalAddTodo","props","title","setTitle","description","setDescription","status","setStatus","onChangeTitle","event","preventDefault","target","value","onChangeDescription","handleSubmit","console","log","date","post","month","day","then","res","data","setTodos","todos","concat","onStatusChange","checked","handleOk","setIsModalAddTodoOpen","handleCancel","showModal","isModalAddTodoOpen","span","maxWidth","remember","offset"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalAddTodo.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {  Button, Checkbox, Form, Input, Modal } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Todo } from \"../types\";\nimport { Dayjs } from \"dayjs\";\nimport axios from \"axios\";\nimport type { CheckboxChangeEvent } from 'antd/es/checkbox';\n\ninterface ModalAddTodoInterface {\n  isModalAddTodoOpen: boolean;\n  setIsModalAddTodoOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[];\n  value: Dayjs\n}\n\n\nconst ModalAddTodo = (props: ModalAddTodoInterface) => {\n\n  const [title, setTitle] = useState<string>(\"\")\n  const [description, setDescription] = useState<string>(\"\")\n  const [status, setStatus] = useState<boolean>(false)\n\n  const onChangeTitle: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    setTitle(event.target.value)\n  }\n\n  const onChangeDescription: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    setDescription(event.target.value)\n  }\n\n  const handleSubmit = (event: { preventDefault: () => void;})=> {\n    event.preventDefault();\n    console.log(title, description, status);\n    console.log(props.value.date());\n    \n    axios.post('http://localhost:3001/api/todos', {month: props.value.month() + 1, day: props.value.date(), title: title, description: description, status: status})\n    .then(res => {\n      console.log('from handle submit', res.data);\n      props.setTodos(props.todos.concat(res.data))\n    })\n  }\n\n  const onStatusChange = (event: CheckboxChangeEvent) => {\n    setStatus(event.target.checked)\n  }\n\n  const handleOk = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n\n  const showModal = () => {\n    props.setIsModalAddTodoOpen(true);\n  }\n\n  return (\n    <>\n      <PlusCircleOutlined onClick={showModal}/>\n      <Modal className=\"modal\" mask={false} title=\"Add a new todo\" open={props.isModalAddTodoOpen} onOk={handleOk} onCancel={handleCancel}>\n        <Form\n          name=\"basic\"\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          style={{ maxWidth: 600 }}\n          initialValues={{ remember: true }}\n          autoComplete=\"off\" \n        >\n          <Form.Item\n            label=\"Title\"\n            name=\"title\"\n            >\n            <Input onChange={onChangeTitle}/>\n          </Form.Item>\n          <Form.Item\n            label=\"description\"\n            name=\"description\"\n          >\n            <Input onChange={onChangeDescription}/>\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n              Submit\n            </Button>\n          </Form.Item>\n          <Checkbox onChange={onStatusChange}>Done</Checkbox>\n        </Form>\n      </Modal>\n    </>\n  )\n}\n\nexport default ModalAddTodo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}