{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalAddTodo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Form, Input, Modal } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalAddTodo = props => {\n  _s();\n  const [title, setTitle] = useState(props.todo.title);\n  const [description, setDescription] = useState(props.todo.description);\n  const [status, setStatus] = useState(props.todo.status);\n  const onChangeTitle = event => {\n    event.preventDefault();\n    setTitle(event.target.value);\n  };\n  const onChangeDescription = event => {\n    event.preventDefault();\n    setDescription(event.target.value);\n  };\n  const handleOk = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n  const showModal = () => {\n    props.setIsModalAddTodoOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n      onClick: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"modal\",\n      mask: false,\n      title: \"Add a new todo\",\n      open: props.isModalAddTodoOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        style: {\n          maxWidth: 600\n        },\n        initialValues: {\n          remember: true\n        },\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Title\",\n          name: \"title\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"description\",\n          name: \"description\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ModalAddTodo, \"+Cvc4kjeanWbmWB+5KoaqUkDTGA=\");\n_c = ModalAddTodo;\nexport default ModalAddTodo;\nvar _c;\n$RefreshReg$(_c, \"ModalAddTodo\");","map":{"version":3,"names":["React","useState","Form","Input","Modal","PlusCircleOutlined","ModalAddTodo","props","title","setTitle","todo","description","setDescription","status","setStatus","onChangeTitle","event","preventDefault","target","value","onChangeDescription","handleOk","setIsModalAddTodoOpen","handleCancel","showModal","isModalAddTodoOpen","span","maxWidth","remember"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalAddTodo.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {  Form, Input, Modal } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Todo } from \"../types\";\n\ninterface ModalAddTodoInterface {\n  isModalAddTodoOpen: boolean;\n  setIsModalAddTodoOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[];\n}\n\n\nconst ModalAddTodo = (props: ModalAddTodoInterface) => {\n\n  const [title, setTitle] = useState<string>(props.todo.title)\n  const [description, setDescription] = useState<string>(props.todo.description)\n  const [status, setStatus] = useState<boolean>(props.todo.status)\n\n  const onChangeTitle: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    setTitle(event.target.value)\n  }\n\n  const onChangeDescription: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    setDescription(event.target.value)\n  }\n\n  const handleOk = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalAddTodoOpen(false);\n  };\n\n  const showModal = () => {\n    props.setIsModalAddTodoOpen(true);\n  }\n\n  return (\n    <>\n      <PlusCircleOutlined onClick={showModal}/>\n      <Modal className=\"modal\" mask={false} title=\"Add a new todo\" open={props.isModalAddTodoOpen} onOk={handleOk} onCancel={handleCancel}>\n        <Form\n          name=\"basic\"\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          style={{ maxWidth: 600 }}\n          initialValues={{ remember: true }}\n          autoComplete=\"off\" \n        >\n\n          <Form.Item\n            label=\"Title\"\n            name=\"title\"\n            >\n            <Input onChange={onChangeTitle}/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"description\"\n            name=\"description\"\n          >\n            <Input onChange={onChangeDescription}/>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  )\n}\n\nexport default ModalAddTodo"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAUC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AAC1C,SAASC,kBAAkB,QAAQ,mBAAmB;AAAC;AAAA;AAWvD,MAAMC,YAAY,GAAIC,KAA4B,IAAK;EAAA;EAErD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAASM,KAAK,CAACG,IAAI,CAACF,KAAK,CAAC;EAC5D,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAASM,KAAK,CAACG,IAAI,CAACC,WAAW,CAAC;EAC9E,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAUM,KAAK,CAACG,IAAI,CAACG,MAAM,CAAC;EAEhE,MAAME,aAAyD,GAAIC,KAAK,IAAK;IAC3EA,KAAK,CAACC,cAAc,EAAE;IACtBR,QAAQ,CAACO,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,mBAA+D,GAAIJ,KAAK,IAAK;IACjFA,KAAK,CAACC,cAAc,EAAE;IACtBL,cAAc,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,QAAQ,GAAG,MAAM;IACrBd,KAAK,CAACe,qBAAqB,CAAC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBhB,KAAK,CAACe,qBAAqB,CAAC,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,SAAS,GAAG,MAAM;IACtBjB,KAAK,CAACe,qBAAqB,CAAC,IAAI,CAAC;EACnC,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,kBAAkB;MAAC,OAAO,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACzC,QAAC,KAAK;MAAC,SAAS,EAAC,OAAO;MAAC,IAAI,EAAE,KAAM;MAAC,KAAK,EAAC,gBAAgB;MAAC,IAAI,EAAEjB,KAAK,CAACkB,kBAAmB;MAAC,IAAI,EAAEJ,QAAS;MAAC,QAAQ,EAAEE,YAAa;MAAA,uBAClI,QAAC,IAAI;QACH,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAE;UAAEG,IAAI,EAAE;QAAE,CAAE;QACtB,UAAU,EAAE;UAAEA,IAAI,EAAE;QAAG,CAAE;QACzB,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QACzB,aAAa,EAAE;UAAEC,QAAQ,EAAE;QAAK,CAAE;QAClC,YAAY,EAAC,KAAK;QAAA,wBAGlB,QAAC,IAAI,CAAC,IAAI;UACR,KAAK,EAAC,OAAO;UACb,IAAI,EAAC,OAAO;UAAA,uBAEZ,QAAC,KAAK;YAAC,QAAQ,EAAEb;UAAc;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QACvB,eAEZ,QAAC,IAAI,CAAC,IAAI;UACR,KAAK,EAAC,aAAa;UACnB,IAAI,EAAC,aAAa;UAAA,uBAElB,QAAC,KAAK;YAAC,QAAQ,EAAEK;UAAoB;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAC7B;MAAA;QAAA;QAAA;QAAA;MAAA;IACP;MAAA;MAAA;MAAA;IAAA,QACD;EAAA,gBACP;AAEP,CAAC;AAAA,GA1DKd,YAAY;AAAA,KAAZA,YAAY;AA4DlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}