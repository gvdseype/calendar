{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalHolder.tsx\";\nimport { Modal } from \"antd\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalHolder = props => {\n  const handleOk = () => {\n    props.setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      open: props.isModalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some contents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some contents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some contents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ModalHolder;\nexport default ModalHolder;\nvar _c;\n$RefreshReg$(_c, \"ModalHolder\");","map":{"version":3,"names":["Modal","React","ModalHolder","props","handleOk","setIsModalOpen","handleCancel","isModalOpen"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalHolder.tsx"],"sourcesContent":["import { Modal } from \"antd\";\nimport React, { useState } from \"react\";\n\ninterface ModalHolderProps {\n  isModalOpen: boolean;\n  setIsModalOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst ModalHolder = (props: ModalHolderProps) => {\n\n  const handleOk = () => {\n    props.setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Modal title=\"Basic Modal\" open={props.isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Modal>\n    </>\n  )\n}\n\nexport default ModalHolder"],"mappings":";AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,MAAoB,OAAO;AAAC;AAAA;AAOxC,MAAMC,WAAW,GAAIC,KAAuB,IAAK;EAE/C,MAAMC,QAAQ,GAAG,MAAM;IACrBD,KAAK,CAACE,cAAc,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBH,KAAK,CAACE,cAAc,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,KAAK,EAAC,aAAa;MAAC,IAAI,EAAEF,KAAK,CAACI,WAAY;MAAC,IAAI,EAAEH,QAAS;MAAC,QAAQ,EAAEE,YAAa;MAAA,wBACzF;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI,eACvB;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI,eACvB;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EACjB,iBACP;AAEP,CAAC;AAAA,KAnBKJ,WAAW;AAqBjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}