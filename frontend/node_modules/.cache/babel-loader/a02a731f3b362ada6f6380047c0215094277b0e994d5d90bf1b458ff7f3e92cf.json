{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalEditTodo.tsx\";\nimport { Modal } from \"antd\";\nimport React from \"react\";\nimport { FormModal } from \"./FormModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalEditTodo = props => {\n  const handleOk = () => {\n    props.setIsModalEditOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalEditOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      mask: false,\n      title: \"Change the title, the description or the status\",\n      open: props.isModalEditTodoOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(FormModal, {\n        todo: props.todo,\n        setTodos: props.setTodos,\n        todos: props.todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ModalEditTodo;\nexport default ModalEditTodo;\nvar _c;\n$RefreshReg$(_c, \"ModalEditTodo\");","map":{"version":3,"names":["Modal","React","FormModal","ModalEditTodo","props","handleOk","setIsModalEditOpen","handleCancel","isModalEditTodoOpen","todo","setTodos","todos"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalEditTodo.tsx"],"sourcesContent":["import { Modal } from \"antd\";\nimport React from \"react\";\nimport { Todo } from \"../types\";\nimport { FormModal } from \"./FormModal\";\n\ninterface ModalHolderProps {\n  isModalEditTodoOpen: boolean;\n  setIsModalEditOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  todo: Todo;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[]\n}\n\nconst ModalEditTodo = (props: ModalHolderProps) => {\n\n  const handleOk = () => {\n    props.setIsModalEditOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalEditOpen(false);\n  };\n\n\n  return (\n    <>\n      <Modal mask={false} title=\"Change the title, the description or the status\" open={props.isModalEditTodoOpen} onOk={handleOk} onCancel={handleCancel}>\n        <FormModal todo={props.todo} setTodos={props.setTodos} todos={props.todos}/>\n      </Modal>\n    </>\n  )\n  \n}\n\nexport default ModalEditTodo"],"mappings":";AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,aAAa;AAAC;AAAA;AAUxC,MAAMC,aAAa,GAAIC,KAAuB,IAAK;EAEjD,MAAMC,QAAQ,GAAG,MAAM;IACrBD,KAAK,CAACE,kBAAkB,CAAC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBH,KAAK,CAACE,kBAAkB,CAAC,KAAK,CAAC;EACjC,CAAC;EAGD,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,IAAI,EAAE,KAAM;MAAC,KAAK,EAAC,iDAAiD;MAAC,IAAI,EAAEF,KAAK,CAACI,mBAAoB;MAAC,IAAI,EAAEH,QAAS;MAAC,QAAQ,EAAEE,YAAa;MAAA,uBAClJ,QAAC,SAAS;QAAC,IAAI,EAAEH,KAAK,CAACK,IAAK;QAAC,QAAQ,EAAEL,KAAK,CAACM,QAAS;QAAC,KAAK,EAAEN,KAAK,CAACO;MAAM;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA;EACtE,iBACP;AAGP,CAAC;AAAA,KAnBKR,aAAa;AAqBnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}