{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/components/ModalEditTodo.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Checkbox, Form, Input, Modal } from \"antd\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalEditTodo = props => {\n  _s();\n  const currentTodo = props.todos.filter(aTodo => aTodo.id == props.editId)[0];\n  const [todo, setTodo] = useState(props.todo);\n  const [title, setTitle] = useState(currentTodo.title);\n  const [description, setDescription] = useState(currentTodo.description);\n  const [status, setStatus] = useState(currentTodo.status);\n  const handleOk = () => {\n    props.setIsModalEditOpen(false);\n  };\n  const handleCancel = () => {\n    props.setIsModalEditOpen(false);\n  };\n  const onChangeTitle = event => {\n    event.preventDefault();\n    setTitle(event.target.value);\n  };\n  const onChangeDescription = event => {\n    event.preventDefault();\n    setDescription(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('from handle submit', props.editId);\n    axios.put('http://localhost:3001/api/todos', {\n      id: currentTodo.id,\n      month: currentTodo.month,\n      day: currentTodo.day,\n      title: title,\n      description: description,\n      status: status\n    }).then(res => {\n      console.log('from handle submit', res.data);\n      props.setTodos(props.todos.map(aTodo => aTodo.id !== currentTodo.id ? aTodo : res.data));\n    });\n  };\n  const onStatusChange = event => {\n    event.preventDefault();\n    setStatus(event.target.checked);\n  };\n  if (todo) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        mask: false,\n        title: \"Change the title, the description or the status\",\n        open: props.isModalEditTodoOpen,\n        onOk: handleOk,\n        onCancel: handleCancel,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"basic\",\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          style: {\n            maxWidth: 600\n          },\n          initialValues: {\n            remember: false\n          },\n          autoComplete: \"off\",\n          preserve: false,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Title\",\n            name: \"title\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: onChangeTitle,\n              placeholder: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"description\",\n            name: \"description\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: onChangeDescription,\n              placeholder: todo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            onChange: onStatusChange,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalEditTodo, \"hiM3UNHGpuELZd2yXd7sn16VVB8=\");\n_c = ModalEditTodo;\nexport default ModalEditTodo;\nvar _c;\n$RefreshReg$(_c, \"ModalEditTodo\");","map":{"version":3,"names":["Button","Checkbox","Form","Input","Modal","axios","React","useState","ModalEditTodo","props","currentTodo","todos","filter","aTodo","id","editId","todo","setTodo","title","setTitle","description","setDescription","status","setStatus","handleOk","setIsModalEditOpen","handleCancel","onChangeTitle","event","preventDefault","target","value","onChangeDescription","handleSubmit","console","log","put","month","day","then","res","data","setTodos","map","onStatusChange","checked","isModalEditTodoOpen","span","maxWidth","remember","offset"],"sources":["/Users/gilles/dev/easypost/frontend/src/components/ModalEditTodo.tsx"],"sourcesContent":["import { Button, Checkbox, Form, Input, Modal } from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/es/checkbox\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Todo } from \"../types\";\n\ninterface ModalHolderProps {\n  isModalEditTodoOpen: boolean;\n  setIsModalEditOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todo: Todo | null;\n}\n\nconst ModalEditTodo = (props: ModalHolderProps) => {\n  const currentTodo = props.todos.filter((aTodo: Todo) => aTodo.id == props.editId)[0]\n  const [todo, setTodo] = useState<Todo | null>(props.todo);\n  const [title, setTitle] = useState<string>(currentTodo.title)\n  const [description, setDescription] = useState<string>(currentTodo.description)\n  const [status, setStatus] = useState<boolean>(currentTodo.status)\n\n  const handleOk = () => {\n    props.setIsModalEditOpen(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalEditOpen(false);\n  };\n\n  const onChangeTitle: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    setTitle(event.target.value)\n  }\n\n  const onChangeDescription: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    event.preventDefault();\n    setDescription(event.target.value)\n  }\n\n  const handleSubmit = (event: { preventDefault: () => void;})=> {\n    event.preventDefault();\n    console.log('from handle submit', props.editId);\n    axios.put('http://localhost:3001/api/todos', {id: currentTodo.id, month: currentTodo.month, day: currentTodo.day, title: title, description: description, status: status})\n    .then(res => {\n      console.log('from handle submit', res.data);\n      props.setTodos(props.todos.map((aTodo: Todo) => aTodo.id !== currentTodo.id ? aTodo : res.data))\n    })\n  }\n\n  const onStatusChange = (event: CheckboxChangeEvent) => {\n    event.preventDefault();\n    setStatus(event.target.checked)\n  }\n\n  if (todo) {\n    return (\n      <>\n        <Modal mask={false} title=\"Change the title, the description or the status\" open={props.isModalEditTodoOpen} onOk={handleOk} onCancel={handleCancel}>\n        <Form\n            name=\"basic\"\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            style={{ maxWidth: 600 }}\n            initialValues={{ remember: false }}\n            autoComplete=\"off\"\n            preserve={false}\n          >\n            <Form.Item\n              label=\"Title\"\n              name=\"title\"\n              >\n              <Input onChange={onChangeTitle} placeholder={todo.title}/>\n            </Form.Item>\n            <Form.Item\n              label=\"description\"\n              name=\"description\"\n            >\n              <Input onChange={onChangeDescription} placeholder={todo.description}/>\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n              <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n                Submit\n              </Button>\n            </Form.Item>\n            <Checkbox onChange={onStatusChange}>Done</Checkbox>\n          </Form>\n        </Modal>\n      </>\n    )\n  }\n  return (\n    <div></div>\n  )\n  \n}\n\nexport default ModalEditTodo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}