{"ast":null,"code":"var _jsxFileName = \"/Users/gilles/dev/easypost/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport axios from 'axios';\nimport Month from './components/Month';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [month, setMonth] = useState(1);\n  const daysInMonth = (month, year) => {\n    let daysInMonth = new Date(year, month + 1, 0).getDate();\n    return daysInMonth;\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/todos').then(response => {\n      const today = new Date();\n      setMonth(today.getMonth() + 1);\n      setTodos(response.data.filter(aTodo => aTodo.month == month));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Month, {\n      month: month,\n      setMonth: setMonth,\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos.filter(aTodo => aTodo.month == month),\n      setTodos: setTodos,\n      month: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z8wJW4D8AbROsQpPtqumykRd8F8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TodoList","axios","Month","App","todos","setTodos","month","setMonth","daysInMonth","year","Date","getDate","get","then","response","today","getMonth","data","filter","aTodo"],"sources":["/Users/gilles/dev/easypost/frontend/src/App.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\nimport { Todo } from './types';\nimport TodoList from './components/TodoList'\nimport axios from 'axios';\nimport Month from './components/Month';\n\nfunction App() {\n  const [todos, setTodos] = useState<Todo[]>([])\n  const [month, setMonth] = useState<number>(1)\n\n  const daysInMonth = (month: number, year: number): number => {\n    let daysInMonth = new Date(year, month + 1, 0).getDate();\n    return daysInMonth\n  }\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/todos')\n    .then(response => {\n      const today = new Date();\n      setMonth(today.getMonth() + 1)\n      setTodos(response.data.filter((aTodo: Todo) => aTodo.month == month))      \n    })\n  }, [])\n  \n  return (\n    <div >\n      <Month month={month} setMonth={setMonth} todos={todos} setTodos={setTodos}/>\n      <TodoList todos={todos.filter((aTodo: Todo) => aTodo.month == month)} setTodos={setTodos} month={month}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAO,WAAW;AAElB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAEvC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,CAAC,CAAC;EAE7C,MAAMS,WAAW,GAAG,CAACF,KAAa,EAAEG,IAAY,KAAa;IAC3D,IAAID,WAAW,GAAG,IAAIE,IAAI,CAACD,IAAI,EAAEH,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACK,OAAO,EAAE;IACxD,OAAOH,WAAW;EACpB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdG,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,KAAK,GAAG,IAAIL,IAAI,EAAE;MACxBH,QAAQ,CAACQ,KAAK,CAACC,QAAQ,EAAE,GAAG,CAAC,CAAC;MAC9BX,QAAQ,CAACS,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAEC,KAAW,IAAKA,KAAK,CAACb,KAAK,IAAIA,KAAK,CAAC,CAAC;IACvE,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE,QAAC,KAAK;MAAC,KAAK,EAAEA,KAAM;MAAC,QAAQ,EAAEC,QAAS;MAAC,KAAK,EAAEH,KAAM;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5E,QAAC,QAAQ;MAAC,KAAK,EAAED,KAAK,CAACc,MAAM,CAAEC,KAAW,IAAKA,KAAK,CAACb,KAAK,IAAIA,KAAK,CAAE;MAAC,QAAQ,EAAED,QAAS;MAAC,KAAK,EAAEC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACrG;AAEV;AAAC,GAxBQH,GAAG;AAAA,KAAHA,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}